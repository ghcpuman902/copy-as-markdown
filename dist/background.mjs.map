{"version":3,"sources":["../src/background.ts"],"sourcesContent":["async function getActiveTabId(): Promise<number> {\n  const queryOptions = { active: true, lastFocusedWindow: true };\n  const [tab] = await chrome.tabs.query(queryOptions);\n  return tab?.id || 0;\n}\n\nasync function handleConvertHtmlToMarkdown() {\n  try {\n    const tabId = await getActiveTabId();\n    if (!tabId) {\n      console.warn(\"No active tab found.\");\n      return;\n    }\n\n    const response = await chrome.tabs.sendMessage(tabId, { type: \"getSelectionHtml\" });\n    if (!response) {\n      console.warn(\"No response from the content script.\");\n      return;\n    }\n\n    if (response.error) {\n      console.error(\"Conversion returned null, check the HTML content.\", response.error);\n      return;\n    }\n\n    console.log(\"Clipboard updated with Markdown content.\", response.markdownContent);\n  } catch (error) {\n    console.warn('Error, either selection is empty or conversion failed:', error);\n  }\n}\n\nchrome.commands.onCommand.addListener(async (command) => {\n  if (command === \"convert_html_to_markdown\") {\n    await handleConvertHtmlToMarkdown();\n  }\n});\n"],"mappings":";AAAA,eAAe,iBAAkC;AAC/C,QAAM,eAAe,EAAE,QAAQ,MAAM,mBAAmB,KAAK;AAC7D,QAAM,CAAC,GAAG,IAAI,MAAM,OAAO,KAAK,MAAM,YAAY;AAClD,SAAO,KAAK,MAAM;AACpB;AAEA,eAAe,8BAA8B;AAC3C,MAAI;AACF,UAAM,QAAQ,MAAM,eAAe;AACnC,QAAI,CAAC,OAAO;AACV,cAAQ,KAAK,sBAAsB;AACnC;AAAA,IACF;AAEA,UAAM,WAAW,MAAM,OAAO,KAAK,YAAY,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAClF,QAAI,CAAC,UAAU;AACb,cAAQ,KAAK,sCAAsC;AACnD;AAAA,IACF;AAEA,QAAI,SAAS,OAAO;AAClB,cAAQ,MAAM,qDAAqD,SAAS,KAAK;AACjF;AAAA,IACF;AAEA,YAAQ,IAAI,4CAA4C,SAAS,eAAe;AAAA,EAClF,SAAS,OAAO;AACd,YAAQ,KAAK,0DAA0D,KAAK;AAAA,EAC9E;AACF;AAEA,OAAO,SAAS,UAAU,YAAY,OAAO,YAAY;AACvD,MAAI,YAAY,4BAA4B;AAC1C,UAAM,4BAA4B;AAAA,EACpC;AACF,CAAC;","names":[]}